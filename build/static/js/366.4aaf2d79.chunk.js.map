{"version":3,"file":"static/js/366.4aaf2d79.chunk.js","mappings":"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","sources":["hooks/useInput.ts","hooks/useSocket.ts","components/Menu/style.tsx","components/Menu/index.tsx","components/ChatBox/styles.tsx","components/ChatBox/index.tsx","components/Chat/styles.tsx","components/Chat/index.tsx","components/ChatList/styles.tsx","components/ChatList/index.tsx","pages/Channel/styles.tsx","pages/DirectMessage/styles.tsx","pages/DirectMessage/index.tsx","utils/makeSection.ts","components/EachDM/index.tsx","components/DMList/styles.tsx","components/DMList/index.tsx","components/EachChannel/index.tsx","components/ChannelList/index.tsx","layouts/Workspace/index.tsx","layouts/Workspace/style.tsx","utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from \"react\"\n\ntype ReturnType<T =any>  = [T, (e: any) =>void, Dispatch<SetStateAction<T>>];\n// const useInput = (initData : any) =>{\nconst useInput = <T = any>(initData : T) : ReturnType<T> =>{\n\tconst [value, setValue] = useState(initData);\n\tconst handler = useCallback((e:any) =>{\n\t\tsetValue(e.target.value);\n\t}, []);\n\treturn [value, handler, setValue]\n}\nexport default useInput;","import { useCallback } from 'react';\nimport { io, Socket } from 'socket.io-client'\n\nconst backUrl = 'http://localhost:3095';\n\nconst sockets: { [key: string]: Socket } = {};\nconst useSocket = (workspace?: string): [Socket | undefined, () => void] => {\n  const disconnect = useCallback(() => {\n    if (workspace && sockets[workspace]) {\n      sockets[workspace].disconnect();\n      delete sockets[workspace];\n    }\n  }, [workspace]);\n  if (!workspace) {\n    return [undefined, disconnect];\n  }\n  if (!sockets[workspace]) {\n    sockets[workspace] = io(`${backUrl}/ws-${workspace}`, {\n      transports: ['websocket'],\n    });\n    console.info('create socket', workspace, sockets[workspace]);\n  }\n\n  return [sockets[workspace], disconnect];\n};\n\nexport default useSocket;","\nimport styled from '@emotion/styled';\n\nexport const CreateMenu = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  left: 0;\n  bottom: 0;\n  z-index: 1000;\n\n  & > div {\n    position: absolute;\n    display: inline-block;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    min-width: 360px;\n    z-index: 512;\n    max-height: calc(100vh - 20px);\n    color: rgb(29, 28, 29);\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n  color: black;\n`;\n","import React , {CSSProperties, FC, useCallback} from \"react\";\nimport {CloseModalButton, CreateMenu } from \"./style\";\n\ninterface Props{\n\tshow: boolean;\n\tonCloseModal: ()=>void;\n\tstyle:CSSProperties;\n\tcloseButton?:boolean;\n\tchildren:any;\n}\nconst Menu : FC<Props> = ({children, style,show, onCloseModal, closeButton}) => {\n\nconst stopPropagation = useCallback((e:any)=>{\n\te.stopPropagation();\n},[]);\n\n\treturn (\n\t\t<CreateMenu onClick={onCloseModal}>x\n\t\t\t<div style={style} onClick={stopPropagation}>\n\t\t\t{closeButton && <CloseModalButton onClick={onCloseModal}>X</CloseModalButton>}\n\t\t\t{children}\n\t\t\t</div>\n\t\t</CreateMenu>\n\t)\n}\nMenu.defaultProps ={\n\tcloseButton: true\n}\n\nexport default Menu;","import styled from '@emotion/styled';\nimport { MentionsInput } from 'react-mentions';\n\nexport const ChatArea = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  padding-top: 0;\n`;\n\nexport const Form = styled.form`\n  color: rgb(29, 28, 29);\n  font-size: 15px;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid rgb(29, 28, 29);\n`;\n\nexport const MentionsTextarea = styled(MentionsInput)`\n  font-family: Slack-Lato, appleLogo, sans-serif;\n  font-size: 15px;\n  padding: 8px 9px;\n\n  & strong {\n    background: skyblue;\n  }\n\n  & textarea {\n    height: 44px;\n    padding: 9px 10px !important;\n    outline: none !important;\n    border-radius: 4px !important;\n    resize: none !important;\n    line-height: 22px;\n    border: none;\n  }\n\n  & ul {\n    border: 1px solid lightgray;\n    max-height: 200px;\n    overflow-y: auto;\n    padding: 9px 10px;\n    background: white;\n    border-radius: 4px;\n    width: 150px;\n  }\n`;\n\nexport const Toolbox = styled.div`\n  position: relative;\n  background: rgb(248, 248, 248);\n  height: 41px;\n  display: flex;\n  border-top: 1px solid rgb(221, 221, 221);\n  align-items: center;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n`;\n\nexport const SendButton = styled.button`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n`;\n\nexport const EachMention = styled.button<{ focus: boolean }>`\n  padding: 4px 20px;\n  background: transparent;\n  border: none;\n  display: flex;\n  align-items: center;\n  color: rgb(28, 29, 28);\n  width: 100%;\n\n  & img {\n    margin-right: 5px;\n  }\n\n  ${({ focus }) =>\n    focus &&\n    `\n    background: #1264a3;\n    color: white;\n  `};\n`;\n","import { ChatArea, Form, MentionsTextarea, SendButton, Toolbox, EachMention } from './styles';\nimport { IUser } from '../../typings/db';\nimport autosize from 'autosize';\nimport gravatar from 'gravatar';\nimport React, { FC, useCallback, useEffect, useRef } from 'react';\nimport { Mention, SuggestionDataItem } from 'react-mentions';\n\ninterface Props {\n  onSubmitForm: (e: any) => void;\n  chat?: string;\n  onChangeChat: (e: any) => void;\n  placeholder: string;\n  data?: IUser[];\n}\nconst ChatBox: FC<Props> = ({ onSubmitForm, chat, onChangeChat, placeholder, data }) => {\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  useEffect(() => {\n    if (textareaRef.current) {\n      autosize(textareaRef.current);\n    }\n  }, []);\n\n  const onKeydownChat = useCallback(\n    (e:any) => {\n      if (e.key === 'Enter') {\n        if (!e.shiftKey) {\n          e.preventDefault();\n          onSubmitForm(e);\n        }\n      }\n    },\n    [onSubmitForm],\n  );\n\n  const renderUserSuggestion: (\n    suggestion: SuggestionDataItem,\n    search: string,\n    highlightedDisplay: React.ReactNode,\n    index: number,\n    focused: boolean,\n  ) => React.ReactNode = useCallback(\n    (member, search, highlightedDisplay, index, focus) => {\n      if (!data) {\n        return null;\n      }\n      return (\n        <EachMention focus={focus}>\n          <img src={gravatar.url(data[index].email, { s: '20px', d: 'retro' })} alt={data[index].nickname} />\n          <span>{highlightedDisplay}</span>\n        </EachMention>\n      );\n    },\n    [data],\n  );\n\n  return (\n    <ChatArea>\n      <Form onSubmit={onSubmitForm}>\n        <MentionsTextarea\n          id=\"editor-chat\"\n          value={chat}\n          onChange={onChangeChat}\n          onKeyPress={onKeydownChat}\n          placeholder={placeholder}\n          inputRef={textareaRef}\n          allowSuggestionsAboveCursor\n        >\n          <Mention\n            appendSpaceOnAdd\n            trigger=\"@\"\n            data={data?.map((v) => ({ id: v.id, display: v.nickname })) || []}\n            renderSuggestion={renderUserSuggestion}\n          />\n        </MentionsTextarea>\n        <Toolbox>\n          <SendButton\n            className={\n              'c-button-unstyled c-icon_button c-icon_button--light c-icon_button--size_medium c-texty_input__button c-texty_input__button--send' +\n              (chat?.trim() ? '' : ' c-texty_input__button--disabled')\n            }\n            data-qa=\"texty_send_button\"\n            aria-label=\"Send message\"\n            data-sk=\"tooltip_parent\"\n            type=\"submit\"\n            disabled={!chat?.trim()}\n          >\n            <i className=\"c-icon c-icon--paperplane-filled\" aria-hidden=\"true\" />\n          </SendButton>\n        </Toolbox>\n      </Form>\n    </ChatArea>\n  );\n};\n\nexport default ChatBox;\n","import styled from '@emotion/styled';\n\nexport const ChatWrapper = styled.div`\n  display: flex;\n  padding: 8px 20px;\n\n  &:hover {\n    background: #eee;\n  }\n\n  & .chat-img {\n    display: flex;\n    width: 36px;\n    margin-right: 8px;\n\n    & img {\n      width: 36px;\n      height: 36px;\n    }\n  }\n\n  & .chat-text {\n    display: flex;\n    flex-wrap: wrap;\n    flex: 1;\n\n    & p {\n      flex: 0 0 100%;\n      margin: 0;\n    }\n  }\n\n  & .chat-user {\n    display: flex;\n    flex: 0 0 100%;\n    align-items: center;\n\n    & > b {\n      margin-right: 5px;\n    }\n\n    & > span {\n      font-size: 12px;\n    }\n  }\n\n  & a {\n    text-decoration: none;\n    color: deepskyblue;\n  }\n`;\n","import { ChatWrapper } from './styles';\nimport { IChat, IDM, IUser } from '../../typings/db';\nimport dayjs from 'dayjs';\nimport gravatar from 'gravatar';\nimport React, { FC, useMemo, memo } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport regexifyString from 'regexify-string';\n\ninterface Props {\n  data: IDM | IChat;\n}\n\nconst BACK_URL = process.env.NODE_ENV === 'development' ? 'http://localhost:3095' : 'https://sleact.nodebird.com';\nconst Chat: FC<Props> = memo(({ data }) => {\n  const { workspace } = useParams<{ workspace: string; channel: string }>();\n  const user: IUser = 'Sender' in data ? data.Sender : data.User;\n\n  const result = useMemo<(string | JSX.Element)[] | JSX.Element>(\n    () =>\n      data.content.startsWith('uploads\\\\') || data.content.startsWith('uploads/') ? (\n        <img src={`${BACK_URL}/${data.content}`} style={{ maxHeight: 200 }} />\n      ) : (\n        regexifyString({\n          pattern: /@\\[(.+?)]\\((\\d+?)\\)|\\n/g,\n          decorator(match, index) {\n            const arr: string[] | null = match.match(/@\\[(.+?)]\\((\\d+?)\\)/)!;\n            if (arr) {\n              return (\n                <Link key={match + index} to={`/workspace/${workspace}/dm/${arr[2]}`}>\n                  @{arr[1]}\n                </Link>\n              );\n            }\n            return <br key={index} />;\n          },\n          input: data.content,\n        })\n      ),\n    [workspace, data.content],\n  );\n\n  return (\n    <ChatWrapper>\n      <div className=\"chat-img\">\n        <img src={gravatar.url(user.email, { s: '36px', d: 'retro' })} alt={user.nickname} />\n      </div>\n      <div className=\"chat-text\">\n        <div className=\"chat-user\">\n          <b>{user.nickname}</b>\n          <span>{dayjs(data.createdAt).format('h:mm A')}</span>\n        </div>\n        <p>{result}</p>\n      </div>\n    </ChatWrapper>\n  );\n});\n\nexport default Chat;\n","import styled from '@emotion/styled';\n\nexport const ChatZone = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1;\n`;\n\nexport const Section = styled.section`\n  margin-top: 20px;\n  border-top: 1px solid #eee;\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: white;\n    border: none;\n    outline: none;\n  }\n`;\n","import Chat from '../Chat';\nimport { ChatZone, Section, StickyHeader } from './styles';\nimport { IChat, IDM } from '../../typings/db';\nimport React, { FC, RefObject, useCallback } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\ninterface Props {\n  scrollbarRef: RefObject<Scrollbars>;\n  isReachingEnd?: boolean;\n  isEmpty: boolean;\n  chatSections: { [key: string]: (IDM | IChat)[] };\n  setSize: (f: (size: number) => number) => Promise<(IDM | IChat)[][] | undefined>;\n}\nconst ChatList: FC<Props> = ({ scrollbarRef, isReachingEnd, isEmpty, chatSections, setSize }) => {\n  const onScroll = useCallback(\n    (values:any) => {\n      if (values.scrollTop === 0 && !isReachingEnd && !isEmpty) {\n        setSize((size) => size + 1).then(() => {\n          scrollbarRef.current?.scrollTop(scrollbarRef.current?.getScrollHeight() - values.scrollHeight);\n        });\n      }\n    },\n    [setSize, scrollbarRef, isReachingEnd, isEmpty],\n  );\n\n  return (\n    <ChatZone>\n      <Scrollbars autoHide ref={scrollbarRef} onScrollFrame={onScroll}>\n        {Object.entries(chatSections).map(([date, chats]) => {\n          return (\n            <Section className={`section-${date}`} key={date}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats.map((chat) => (\n                <Chat key={chat.id} data={chat} />\n              ))}\n            </Section>\n          );\n        })}\n      </Scrollbars>\n    </ChatZone>\n  );\n};\n\nexport default ChatList;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n`;\n\nexport const DragOver = styled.div`\n  position: absolute;\n  top: 64px;\n  left: 0;\n  width: 100%;\n  height: calc(100% - 64px);\n  background: white;\n  opacity: 0.7;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  height: calc(100vh - 38px);\n  flex-flow: column;\n  position: relative;\n`;\n\nexport const Header = styled.header`\n  height: 64px;\n  display: flex;\n  width: 100%;\n  --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n  box-shadow: 0 1px 0 var(--saf-0);\n  padding: 20px 16px 20px 20px;\n  font-weight: bold;\n  align-items: center;\n\n  & img {\n    margin-right: 5px;\n  }\n`;\n","import ChatBox from '../../components/ChatBox';\nimport ChatList from '../../components/ChatList';\nimport useInput from '../../hooks/useInput';\nimport useSocket from '../../hooks/useSocket';\nimport { DragOver } from '../Channel/styles';\nimport { Header, Container } from './styles';\nimport { IDM } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport makeSection from '../../utils/makeSection';\nimport axios from 'axios';\nimport gravatar from 'gravatar';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { useParams } from 'react-router';\nimport { toast } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\n\n\nconst PAGE_SIZE = 20;\nconst DirectMessage = () => {\n  const { workspace, id } = useParams<{ workspace: string; id: string }>();\n  const [socket] = useSocket(workspace);\n  const { data: myData } = useSWR('http://localhost:3095/api/users', fetcher);\n  const { data: userData } = useSWR(`http://localhost:3095/api/workspaces/${workspace}/users/${id}`, fetcher);\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IDM[]>(\n    (index) => `http://localhost:3095/api/workspaces/${workspace}/dms/${id}/chats?perPage=${PAGE_SIZE}&page=${index + 1}`,\n    fetcher,\n    {\n      onSuccess(data) {\n        if (data?.length === 1) {\n          setTimeout(() => {\n            scrollbarRef.current?.scrollToBottom();\n          }, 100);\n        }\n      },\n    },\n  );\n  const [chat, onChangeChat, setChat] = useInput('');\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const [dragOver, setDragOver] = useState(false);\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd = isEmpty || (chatData && chatData[chatData.length - 1]?.length < PAGE_SIZE);\n\n  const onSubmitForm = useCallback(\n    (e:any) => {\n      e.preventDefault();\n      if (chat?.trim() && chatData) {\n        const savedChat = chat;\n        mutateChat((prevChatData) => {\n          prevChatData?.[0].unshift({\n            id: (chatData[0][0]?.id || 0) + 1,\n            content: savedChat,\n            SenderId: myData.id,\n            Sender: myData,\n            ReceiverId: userData.id,\n            Receiver: userData,\n            createdAt: new Date(),\n          });\n          return prevChatData;\n        }, false).then(() => {\n          localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n          setChat('');\n          if (scrollbarRef.current) {\n            console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n            scrollbarRef.current.scrollToBottom();\n          }\n        });\n        axios\n          .post(`http://localhost:3095/api/workspaces/${workspace}/dms/${id}/chats`, {\n            content: chat,\n          })\n          .catch(console.error);\n      }\n    },\n    [chat, workspace, id, myData, userData, chatData, mutateChat, setChat],\n  );\n\n  const onMessage = useCallback(\n    (data: IDM) => {\n      if (data.SenderId === Number(id) && myData.id !== Number(id)) {\n        mutateChat((chatData) => {\n          chatData?.[0].unshift(data);\n          return chatData;\n        }, false).then(() => {\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              console.log('scrollToBottom!', scrollbarRef.current?.getValues());\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 100);\n            } else {\n              toast.success('새 메시지가 도착했습니다.', {\n                onClick() {\n                  scrollbarRef.current?.scrollToBottom();\n                },\n                closeOnClick: true,\n              });\n            }\n          }\n        });\n      }\n    },\n    [id, myData, mutateChat],\n  );\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n  }, [workspace, id]);\n\n  const onDrop = useCallback(\n    (e:any) => {\n      e.preventDefault();\n      console.log(e);\n      const formData = new FormData();\n      if (e.dataTransfer.items) {\n        // Use DataTransferItemList interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.items.length; i++) {\n          // If dropped items aren't files, reject them\n          if (e.dataTransfer.items[i].kind === 'file') {\n            const file = e.dataTransfer.items[i].getAsFile();\n            console.log('... file[' + i + '].name = ' + file.name);\n            formData.append('image', file);\n          }\n        }\n      } else {\n        // Use DataTransfer interface to access the file(s)\n        for (let i = 0; i < e.dataTransfer.files.length; i++) {\n          console.log('... file[' + i + '].name = ' + e.dataTransfer.files[i].name);\n          formData.append('image', e.dataTransfer.files[i]);\n        }\n      }\n      axios.post(`http://localhost:3095/api/workspaces/${workspace}/dms/${id}/images`, formData).then(() => {\n        setDragOver(false);\n        localStorage.setItem(`${workspace}-${id}`, new Date().getTime().toString());\n        mutateChat();\n      });\n    },\n    [workspace, id, mutateChat],\n  );\n\n  const onDragOver = useCallback((e:any) => {\n    e.preventDefault();\n    console.log(e);\n    setDragOver(true);\n  }, []);\n\n  if (!userData || !myData) {\n    return null;\n  }\n\n  const chatSections = makeSection(chatData ? ([] as IDM[]).concat(...chatData).reverse() : []);\n\n  return (\n    <Container onDrop={onDrop} onDragOver={onDragOver}>\n    asdasd\n      <Header>\n        <img src={gravatar.url(userData.email, { s: '24px', d: 'retro' })} alt={userData.nickname} />\n        <span>{userData.nickname}</span>\n      </Header>\n      <ChatList\n        scrollbarRef={scrollbarRef}\n        isReachingEnd={isReachingEnd}\n        isEmpty={isEmpty}\n        chatSections={chatSections}\n        setSize={setSize}\n      />\n      <ChatBox\n        onSubmitForm={onSubmitForm}\n        chat={chat}\n        onChangeChat={onChangeChat}\n        placeholder={`Message ${userData.nickname}`}\n        data={[]}\n      />\n      {dragOver && <DragOver>업로드!</DragOver>}\n    </Container>\n  );\n};\n\nexport default DirectMessage;\n","import { IChat, IDM } from '../typings/db';\nimport dayjs from 'dayjs';\n\nexport default function makeSection<T extends IDM | IChat>(chatList: T[]) {\n  const sections: { [key: string]: T[] } = {};\n  chatList.forEach((chat) => {\n    const monthDate = dayjs(chat.createdAt).format('YYYY-MM-DD');\n    if (Array.isArray(sections[monthDate])) {\n      sections[monthDate].push(chat);\n    } else {\n      sections[monthDate] = [chat];\n    }\n  });\n  return sections;\n}\n","import { IUser } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\nimport {ProfileImg} from '../../layouts/Workspace/style'\nimport gravatar from \"gravatar\";\n\ninterface Props {\n  member: IUser;\n  isOnline: boolean;\n}\nconst EachDM: VFC<Props> = ({ member, isOnline }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000, //x 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${member.id}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    userData ? `http://localhost:3095/api/workspaces/${workspace}/dms/${member.id}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/dm/${member.id}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, member]);\n\n  return (\n    <NavLink key={member.id} activeClassName=\"selected\" to={`/workspace/${workspace}/dm/${member.id}`}>\n    <img src={gravatar.url(member.email, {s : '50px', d:'retro'})}/>\n     지금 상태는{isOnline} 입니다.\n      {/* <i\n        className={`c-icon p-channel_sidebar__presence_icon p-channel_sidebar__presence_icon--dim_enabled c-presence ${\n          isOnline ? 'c-presence--active c-icon--presence-online' : 'c-icon--presence-offline'\n        }`}\n        aria-hidden=\"true\"\n        data-qa=\"presence_indicator\"\n        data-qa-presence-self=\"false\"\n        data-qa-presence-active=\"false\"\n        data-qa-presence-dnd=\"false\"\n      /> */}\n      <span className={count && count > 0 ? 'bold' : undefined}>{member.nickname}</span>\n      {member.id === userData?.id && <span> (나)</span>}\n      {(count && count > 0 && <span className=\"count\">{count}</span>) || null}\n    </NavLink>\n  );\n};\n\nexport default EachDM;\n","import styled from '@emotion/styled';\n\nexport const CollapseButton = styled.button<{ collapse: boolean }>`\n  background: transparent;\n  border: none;\n  width: 26px;\n  height: 26px;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  margin-left: 10px;\n  cursor: pointer;\n\n  ${({ collapse }) =>\n    collapse &&\n    `\n    & i {\n      transform: none;\n    }\n  `};\n`;\n","import EachDM from '../EachDM';\nimport useSocket from '../../hooks/useSocket';\nimport { CollapseButton } from './styles';\nimport { IDM, IUser, IUserWithOnline } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport React, { FC, useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\nimport useSWR from 'swr';\n\nconst DMList = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const { data: userData } = useSWR<IUser>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const { data: memberData } = useSWR<IUserWithOnline[]>(\n    userData ? `http://localhost:3095/api/workspaces/${workspace}/members` : null,\n    fetcher,\n  );\n  const [socket] = useSocket(workspace);\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const [onlineList, setOnlineList] = useState<number[]>([]);\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n\n  useEffect(() => {\n    console.log('DMList: workspace 바꼈다', workspace);\n    setOnlineList([]);\n  }, [workspace]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: number[]) => {\n      setOnlineList(data);\n    });\n    console.log('socket on dm', socket?.hasListeners('dm'), socket);\n    return () => {\n      console.log('socket off dm', socket?.hasListeners('dm'));\n      socket?.off('onlineList');\n    };\n  }, [socket]);\n  \n  \n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>My firends</span>\n      </h2>\n      <div>\n        {!channelCollapse &&\n          memberData?.map((member) => {\n            const isOnline = onlineList.includes(member.id);\n            return <EachDM key={member.id} member={member} isOnline={isOnline} />;\n          })\n          // <>\n            \n          // </>\n          }\n      </div>\n    </>\n  );\n};\n\nexport default DMList;\n","import { IChannel, IUser } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport React, { useEffect, VFC } from 'react';\nimport { useParams } from 'react-router';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport useSWR from 'swr';\n\ninterface Props {\n  channel: IChannel;\n}\nconst EachChannel: VFC<Props> = ({ channel }) => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const location = useLocation();\n  const { data: userData } = useSWR<IUser>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n  const date = localStorage.getItem(`${workspace}-${channel.name}`) || 0;\n  const { data: count, mutate } = useSWR<number>(\n    // userData ? `http://localhost:3095/api/workspaces/${workspace}/channels/${channel.name}/unreads?after=${date}` : null,\n    fetcher,\n  );\n\n  useEffect(() => {\n    if (location.pathname === `/workspace/${workspace}/channel/${channel.name}`) {\n      mutate(0);\n    }\n  }, [mutate, location.pathname, workspace, channel]);\n\n  console.log(\"test\" , `/workspace/${workspace}/channel/${channel.name}`);\n  return (\n    <NavLink key={channel.name} activeClassName=\"selected\" to={`/workspace/${workspace}/channel/${channel.name}`}>\n      <span className={count !== undefined && count > 0 ? 'bold' : undefined}>{channel.name}</span>\n      {count !== undefined && count > 0 && <span className=\"count\">{count}</span>}\n    </NavLink>\n  );\n};\n\nexport default EachChannel;\n","import { CollapseButton } from '../DMList/styles';\nimport EachChannel from '../EachChannel';\nimport GameRoom from '../../pages/GameRoom';\nimport { IChannel, IUser } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\n\ninterface Props {\n  channelData?: IChannel[];\n  userData?: IUser;\n}\n\nconst ChannelList: FC<Props> = () => {\n  const { workspace } = useParams<{ workspace?: string }>();\n  const [channelCollapse, setChannelCollapse] = useState(false);\n  const { data: userData } = useSWR<IUser>('http://localhost:3095/api/users', fetcher, {\n    dedupingInterval: 2000, // 2초\n  });\n\n  const toggleChannelCollapse = useCallback(() => {\n    setChannelCollapse((prev) => !prev);\n  }, []);\n  \n  const chat:IChannel  = {name:\"Chat\", WorkspaceId:-1, id:-1, private:false};\n  const game:IChannel  = {name:\"Game\", WorkspaceId:-1, id:-1, private:false};\n   const gameroom:IChannel  = {name:\"GameRoom\", WorkspaceId:-1, id:-1, private:false};\n  return (\n    <>\n      <h2>\n        <CollapseButton collapse={channelCollapse} onClick={toggleChannelCollapse}>\n          <i\n            className=\"c-icon p-channel_sidebar__section_heading_expand p-channel_sidebar__section_heading_expand--show_more_feature c-icon--caret-right c-icon--inherit c-icon--inline\"\n            data-qa=\"channel-section-collapse\"\n            aria-hidden=\"true\"\n          />\n        </CollapseButton>\n        <span>Channels</span>\n      </h2>\n      <div>\n          {!channelCollapse && (\n          <>\n            <EachChannel channel={chat}></EachChannel>\n            <EachChannel channel={game}></EachChannel>\n            <EachChannel channel={gameroom}></EachChannel>\n          </>\n          )}\n      </div>\n    </>\n  );\n};\n\nexport default ChannelList;\n","import axios from 'axios';\nimport React, {FC, useCallback, useState ,useEffect} from 'react';\nimport useSWR from 'swr';\nimport fetcher from '../../utils/fetcher';\nimport { Link, Redirect, Switch, Route, useParams } from 'react-router-dom';\n// import { Header, ProfileImg, RightMenu, WorkspaceWrapper,Workspaces, Channels, Chats, MenuScroll, WorkspaceName, ProfileModal, LogOutButton, WorkspaceButton, AddButton, WorkspaceModal } from '@layouts/Workspace/style';\nimport gravatar from \"gravatar\";\nimport loadable from '@loadable/component';\nimport Menu from '../../components/Menu';\nimport { IChannel, IUser } from '../../typings/db';\nimport { Label, Input, Button} from '../../pages/SignUp/styles';\nimport Modal from '../../components/Modal'\nimport useInput from '../../hooks/useInput'\nimport {toast} from 'react-toastify'\nimport CreateChannelModal from '../../components/CreateRoomModal'\n// import { channel } from 'diagnostics_channel';\nimport DirectMessage from '../../pages/DirectMessage';\nimport DMList from '../../components/DMList';\nimport ChannelList from '../../components/ChannelList';\nimport useSocket from '../../hooks/useSocket';\n// import Intro from '@pages/Intro';\n\nimport {\n\tAddButton,\n\tChannels,\n\tChats,\n\tHeader,\n\tLogOutButton,\n\tMenuScroll,\n\tProfileImg,\n\tProfileModal,\n\tRightMenu,\n\tWorkspaceButton,\n\tWorkspaceModal,\n\tWorkspaceName,\n\tWorkspaces,\n\tWorkspaceWrapper,\n\tInnerHeader\n  } from './style';\n\n\n// const Channel = loadable(() => import ('@pages/Channel') );\nconst Intro = loadable(() => import ('../../pages/Intro') );\n// const DirectMessage = loadable(() => import ('@pages/DirectMessage') );\n\n\nconst Chat = loadable(() => import ('../../pages/ChatChannel') );\nconst Game = loadable(() => import ('../../pages/GameChannel') );\nconst GameRoom = loadable(() => import ('../../pages/GameRoom') );\nconst ChatRoom = loadable(() => import ('../../pages/ChatRoom') );\n\ninterface Props {\n\tchildren:any\n  }\nconst Workspace:FC<Props> = ({children}) =>\n{\n\tconst {workspace} = useParams<{workspace:string}>();\n\tconst [socket, disconnectSocket] = useSocket(workspace);\n\tconst {data: userData, error, mutate}  = useSWR<IUser | false>('http://localhost:3095/api/users',fetcher);\n\tconst [ShowUserMenu,setShowUserMenu] = useState(false);\n\tconst {data: channelData} = useSWR<IChannel[]>(userData ? `http://localhost:3095/api/workspaces/${workspace}/channels` : null,fetcher);\n\t\n\t  console.log(userData);\n\tconst onLogout = useCallback(()=>\n\t{\n\t\taxios.post('http://localhost:3095/api/users/logout', null, {\n\t\t\twithCredentials : true,\n\t\t})\n\t\t\t.then(()=>{\n\t\t\t\tmutate(false);\n\t\t\t})\n\t\t\t// .finally(()=>{ return <Redirect to=\"/\"/>});\n\t}, []);\n\n\tconst onClickUserProfile = useCallback(()=>{\n\t\tsetShowUserMenu(!ShowUserMenu);\n\t}, [ShowUserMenu]);\n\n\n\tif (!userData)\n\t{\n\t\treturn <Redirect to=\"/\"/>;\n\t}\n\treturn(\n\t\t<div>\n\t\t<Header>JJIRANSENDANCE</Header>\n\t\t<RightMenu>\n\t\t\t<span onClick={onClickUserProfile}>\n\t\t\t\t<ProfileImg src={gravatar.url(userData.email, {s : '50px', d:'retro'})}/>\n\t\t\t\t{ShowUserMenu && (\n\t\t\t\t\t<Menu style={{right: 0, top: 38}} show={ShowUserMenu} onCloseModal={onClickUserProfile} >\n\t\t\t\t\t<ProfileModal>\n\t\t\t\t\t\t<img src = {gravatar.url(userData.email, {s : '50px', d:'retro'})} alt=\"\" />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span id = \"profile-name\">\n\t\t\t\t\t\t\t\t{userData.nickname}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span id = \"profile-active\">\n\t\t\t\t\t\t\t\tActive\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</ProfileModal>\n\t\t\t\t\t<LogOutButton onClick={onLogout}>로그아웃</LogOutButton>\n\t\t\t\t</Menu>\n\t\t\t\t)}\n\t\t\t</span>\n\t\t</RightMenu>\n\t\t<WorkspaceWrapper>\n\t\t\t<Channels>\n\t\t\t\t<WorkspaceName >jjiransendence!</WorkspaceName>\n\t\t\t\t<MenuScroll>\n\t\t\t\t<ChannelList />\n\t\t\t\t<DMList />\n\t\t\t\t</MenuScroll>\n\t\t\t</Channels>\n\t\t\t<Chats>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path = \"/workspace/:workspace/intro\" component={Intro}/>\n\t\t\t\t\t<Route path = \"/workspace/:workspace/dm/:id\" component={DirectMessage}/>\n                    <Route path = \"/workspace/:workspace/channel/Chat/:ChatRoom/\" component={ChatRoom}/>\n\t\t\t\t\t<Route path = \"/workspace/:workspace/channel/Chat/\" component={Chat}/>\n                    <Route path = \"/workspace/:workspace/channel/Game/\" component={Game}/>\n                    <Route path = \"/workspace/:workspace/channel/GameRoom/\" component={GameRoom}/>\n\t\t\t\t</Switch>\n\t\t\t</Chats>\n\t\t</WorkspaceWrapper>\n\t\t</div>\n\t)\n\n}\nexport default Workspace;\n","import styled from '@emotion/styled';\n\nexport const RightMenu = styled.div`\n  float: right;\n`;\n\nexport const Header = styled.header`\n  height: 38px;\n  max-width: 100%;\n  background: #350d36;\n  color: #ffffff;\n  box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.1);\n  padding: 5px;\n  text-align: center;\n`;\n\n\nexport const InnerHeader = styled.header`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n\n  text-align: center;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 700;\n  font-size: 20px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: rgb(188, 171, 188);\n  cursor: pointer;\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n`;\n\nexport const ProfileImg = styled.img`\n  width: 28px;\n  height: 28px;\n  position: absolute;\n  top: 5px;\n  right: 16px;\n`;\n\nexport const ProfileModal = styled.div`\n  display: flex;\n  padding: 20px;\n\n  & img {\n    display: flex;\n  }\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    margin-left: 10px;\n  }\n\n  & #profile-name {\n    font-weight: bold;\n    display: inline-flex;\n  }\n\n  & #profile-active {\n    font-size: 13px;\n    display: inline-flex;\n  }\n`;\n\nexport const LogOutButton = styled.button`\n  border: none;\n  width: 100%;\n  border-top: 1px solid rgb(29, 28, 29);\n  background: transparent;\n  display: block;\n  height: 33px;\n  padding: 5px 20px 5px;\n  outline: none;\n  cursor: pointer;\n  color: black;\n`;\n\nexport const WorkspaceWrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Workspaces = styled.div`\n  width: 65px;\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  background: #3f0e40;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-right: 1px solid rgb(82, 38, 83);\n  vertical-align: top;\n  text-align: center;\n  padding: 15px 0 0;\n`;\n\nexport const Channels = styled.nav`\n  width: 260px;\n  display: inline-flex;\n  flex-direction: column;\n  background: #3f0e40;\n  color: rgb(188, 171, 188);\n  vertical-align: top;\n\n  & a {\n    padding-left: 36px;\n    color: inherit;\n    text-decoration: none;\n    height: 28px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n\n    &.selected {\n      color: white;\n    }\n  }\n\n  & .bold {\n    color: white;\n    font-weight: bold;\n  }\n\n  & .count {\n    margin-left: auto;\n    background: #cd2553;\n    border-radius: 16px;\n    display: inline-block;\n    font-size: 12px;\n    font-weight: 700;\n    height: 18px;\n    line-height: 18px;\n    padding: 0 9px;\n    color: white;\n    margin-right: 16px;\n  }\n\n  & h2 {\n    height: 36px;\n    line-height: 36px;\n    margin: 0;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    font-size: 15px;\n  }\n`;\n\nexport const WorkspaceName = styled.button`\n  height: 64px;\n  line-height: 64px;\n  border: none;\n  width: 100%;\n  text-align: left;\n  border-top: 1px solid rgb(82, 38, 83);\n  border-bottom: 1px solid rgb(82, 38, 83);\n  font-weight: 900;\n  font-size: 24px;\n  background: transparent;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  padding: 0;\n  padding-left: 16px;\n  margin: 0;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const MenuScroll = styled.div`\n  height: calc(100vh - 102px);\n  overflow-y: auto;\n`;\n\nexport const WorkspaceModal = styled.div`\n  padding: 10px 0 0;\n\n  & h2 {\n    padding-left: 20px;\n  }\n\n  & > button {\n    width: 100%;\n    height: 28px;\n    padding: 4px;\n    border: none;\n    background: transparent;\n    border-top: 1px solid rgb(28, 29, 28);\n    cursor: pointer;\n\n    &:last-of-type {\n      border-bottom: 1px solid rgb(28, 29, 28);\n    }\n  }\n`;\n\nexport const Chats = styled.div`\n  flex: 1;\n`;\n\nexport const AddButton = styled.button`\n  color: white;\n  font-size: 24px;\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const WorkspaceButton = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border-radius: 10px;\n  background: white;\n  border: 3px solid #3f0e40;\n  margin-bottom: 15px;\n  font-size: 18px;\n  font-weight: 700;\n  color: black;\n  cursor: pointer;\n`;\n","import axios from 'axios'\nimport { report } from 'process';\n\nconst fetcher = (url:string) => axios.get(url,{\n\twithCredentials:true,\n}).then((response) => response.data);\n\nexport default fetcher;"],"names":["initData","useState","value","setValue","useCallback","e","target","sockets","workspace","disconnect","io","transports","console","info","undefined","CreateMenu","styled","CloseModalButton","Menu","children","style","onCloseModal","show","closeButton","stopPropagation","onClick","defaultProps","ChatArea","Form","MentionsTextarea","MentionsInput","Toolbox","SendButton","EachMention","focus","onSubmitForm","chat","onChangeChat","placeholder","data","textareaRef","useRef","useEffect","current","autosize","onKeydownChat","key","shiftKey","preventDefault","renderUserSuggestion","member","search","highlightedDisplay","index","src","gravatar","email","s","d","alt","nickname","onSubmit","id","onChange","onKeyPress","inputRef","allowSuggestionsAboveCursor","appendSpaceOnAdd","trigger","map","v","display","renderSuggestion","className","trim","type","disabled","ChatWrapper","memo","useParams","user","Sender","User","result","useMemo","content","startsWith","maxHeight","regexifyString","pattern","decorator","match","arr","to","input","dayjs","createdAt","format","ChatZone","Section","StickyHeader","scrollbarRef","isReachingEnd","isEmpty","chatSections","setSize","onScroll","values","scrollTop","size","then","getScrollHeight","scrollHeight","autoHide","ref","onScrollFrame","Object","entries","date","chats","DragOver","Container","Header","useSocket","socket","myData","useSWR","fetcher","userData","useSWRInfinite","onSuccess","length","setTimeout","scrollToBottom","chatData","mutateChat","mutate","useInput","setChat","dragOver","setDragOver","savedChat","prevChatData","unshift","SenderId","ReceiverId","Receiver","Date","localStorage","setItem","getTime","toString","log","getValues","axios","catch","error","onMessage","Number","getClientHeight","getScrollTop","toast","closeOnClick","on","off","onDrop","formData","FormData","dataTransfer","items","i","kind","file","getAsFile","name","append","files","onDragOver","chatList","sections","forEach","monthDate","Array","isArray","push","makeSection","concat","reverse","isOnline","location","useLocation","dedupingInterval","getItem","count","pathname","activeClassName","CollapseButton","collapse","memberData","channelCollapse","setChannelCollapse","onlineList","setOnlineList","toggleChannelCollapse","prev","hasListeners","includes","channel","WorkspaceId","private","Intro","loadable","Chat","Game","GameRoom","ChatRoom","ShowUserMenu","setShowUserMenu","onLogout","withCredentials","onClickUserProfile","right","top","path","component","DirectMessage","RightMenu","ProfileImg","ProfileModal","LogOutButton","WorkspaceWrapper","Channels","WorkspaceName","MenuScroll","Chats","url","response"],"sourceRoot":""}