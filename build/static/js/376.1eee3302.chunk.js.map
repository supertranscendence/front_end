{"version":3,"file":"static/js/376.1eee3302.chunk.js","mappings":"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","sources":["components/Table/styles.tsx","components/Table/index.tsx","components/Modal/style.tsx","components/Modal/index.tsx","components/CreateRoomModal/index.tsx","pages/ChatChannel/index.tsx","pages/SignUp/styles.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Thead = styled.thead`\n\n  & tr {\n    background: skyblue;\n    width: 40000px\n  }\n`;\n\nexport const Tbody = styled.tbody`\n\n  & tr {\n   \n  }\n`;\n","import React, { PropsWithChildren, FC} from \"react\";\nimport { useTable } from \"react-table\";\nimport { Tbody, Thead } from \"./styles\";\nimport { MenuScroll } from \"../../layouts/Workspace/style\";\n\n\n\ninterface Props {\n\tcolumns: any;\n\tdata: any;\n  }\nconst Table: FC<PropsWithChildren<Props>> = ({ columns, data }) =>  {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({ columns, data });\n\n  return (\n    <MenuScroll>\n    <table {...getTableProps()}>\n      <Thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </Thead>\n      <Tbody {...getTableBodyProps()}>\n        {rows.map((row) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => (\n                <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n              ))}\n            </tr>\n          );\n        })}\n      </Tbody>\n    </table>\n    </MenuScroll>\n  );\n}\n\nexport default Table;","import styled from '@emotion/styled';\n\nexport const CreateModal = styled.div`\n  position: fixed;\n  text-align: center;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 1022;\n\n  & > div {\n    margin-top: 200px;\n    display: inline-block;\n    width: 440px;\n    background: white;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 4px 12px 0 rgba(0, 0, 0, 0.12);\n    background-color: rgba(var(--sk_foreground_min_solid, 248, 248, 248), 1);\n    border-radius: 6px;\n    user-select: none;\n    max-width: 440px;\n    padding: 30px 40px 0;\n    z-index: 1012;\n    position: relative;\n  }\n`;\n\nexport const CloseModalButton = styled.button`\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  background: transparent;\n  border: none;\n  font-size: 30px;\n  cursor: pointer;\n`;\n","import { CreateModal, CloseModalButton } from './style';\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n}\n\nconst Modal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal }) => {\n  const stopPropagation = useCallback((e:any) => {\n    e.stopPropagation();\n  }, []);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <CreateModal onClick={onCloseModal}>\n      <div onClick={stopPropagation}>\n        <CloseModalButton onClick={onCloseModal}>&times;</CloseModalButton>\n        {children}\n      </div>\n    </CreateModal>\n  );\n};\n\nexport default Modal;\n","import { CreateModal, CloseModalButton } from '../Modal/style';\nimport React, { FC, PropsWithChildren, useCallback } from 'react';\nimport {Label, Input, Button} from '../../pages/SignUp/styles';\nimport useInput from \"../../hooks/useInput\"\nimport Modal from \"../Modal\"\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport {toast} from 'react-toastify'\nimport fetcher from '../../utils/fetcher'\nimport useSWR from 'swr'\nimport { IChannel, IUser } from '../../typings/db';\nimport useSocket from '../../hooks/useSocket';\n\ninterface Props {\n  show: boolean;\n  onCloseModal: () => void;\n  setShowCreateRoomModal : (flag:boolean) => void\n}\nconst CreateRoomModal: FC<PropsWithChildren<Props>> = ({ show, children, onCloseModal, setShowCreateRoomModal }) => {\n  const {data: userData, error, mutate: mutate}  = useSWR<IUser | false>('http://localhost:3095/api/users', fetcher);\n  const[newRoom, onChangeNewRoom, setNewRoom] = useInput('');\n  const {workspace, channel}=useParams<{workspace : string , channel:string}>();\n  // const {data: channelData, mutate: mutateChannel} = useSWR<IChannel[]>(userData ? `http://localhost:3095/api/workspaces/${workspace}/channels` : null,fetcher);\n  const [socket] = useSocket(workspace);\n  \n  const clearModal = useCallback(()=>{\n    mutate();\n    setNewRoom(\"\");\n    setShowCreateRoomModal(false);\n  },[]);\n  const onCreateRoom = useCallback((e:any) => {\n    e.preventDefault();\n    if (!newRoom || !newRoom.trim()) {\n      return;\n    }\n    console.log(\"createRoom!\",newRoom );\n    socket?.emit(\"create-room\", newRoom, clearModal);\n    socket?.on(\"helloRoom\", (str:string)=>console.log(str));\n  }, [newRoom]);\n\n  if (!show) {\n    return null;\n  }\n  return (\n    <Modal show = {show} onCloseModal={onCloseModal}>\n    <form onSubmit={onCreateRoom}>\n    <Label id=\"room-create\">\n      <span>채널</span>\n      <Input id=\"room\" value={newRoom} onChange={onChangeNewRoom}/>\n    </Label>\n    <Button type=\"submit\">생성</Button>\n    </form>\n  </Modal>\n  );\n};\n\nexport default CreateRoomModal;\n","import Table from \"../../components/Table\";\nimport ChatBox from '../../components/ChatBox';\nimport ChatList from '../../components/ChatList';\nimport InviteChannelModal from '../../components/InviteChannelModal';\nimport useInput from '../../hooks/useInput';\nimport useSocket from '../../hooks/useSocket';\nimport { Header, Container, DragOver } from '../Channel/styles';\nimport { IChannel, IChat, IUser } from '../../typings/db';\nimport fetcher from '../../utils/fetcher';\nimport makeSection from '../../utils/makeSection';\nimport axios from 'axios';\nimport React, { useMemo, useCallback, useEffect, useRef, useState } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport { toast, ToastContainer } from 'react-toastify';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport { useTable, useGlobalFilter, useSortBy } from \"react-table\";\nimport { Link, Redirect, Switch, Route, useParams } from 'react-router-dom';\nimport loadable from '@loadable/component';\n// import Modal from '@components/Modal'\nimport CreateChannelModal from '../../components/CreateRoomModal'\nimport getRoomInfo from '../../utils/getRoomInfo'\n\n\n// import faker from \"faker/locale/ko\";\nconst ChatRoom = loadable(() => import ('../ChatRoom') );\n// const PAGE_SIZE = 20;\nconst ChatChannel = () => {\nconst { workspace } = useParams<{ workspace?: string }>();\nconst [socket] = useSocket(workspace);\nconst [showCreateChannelModal, setShowCreateRoomModal] = useState(false);\nconst [newRoomFlag, setNewRoomFlag] = useState(false);\n\n// const {data : tetets} = useSWR( 'getChatRoomInfoSWR',getRoomInfo );\n\n// const { data: myData } = useSWR('/api/users', fetcher);\n// console.log(\"tetets\",tetets);\nconst [test, setTest] = useState([]);\nuseEffect(()=>{\n  console.log(\"hi\");\n  socket?.on(\"getChatRoomInfoSWR\",()=>{\n    setTest([...test]);\n  });\n}, [test]);\n\nconst onClickAddRoom = useCallback(() => {\n  setShowCreateRoomModal(true);\n}, []);\n\nconst onCloseModal = useCallback(() => {\n  setShowCreateRoomModal(false);\n}, []);\n\nconst [roomArr, setRoomArr] = useState<{name:string,roomType:string, currCnt:number , enterButton: JSX.Element }[]>([]);\n\n// const onClickBtn = useCallback((e:any)=>{\n//   e.preventDefault();\n//   console.log(\"cl\", e.target.id);\n   \n// },[]);\n\nconst getRooms =  useCallback( (publicRooms : [])=>{\n  console.log(\"publicRooms\", publicRooms);\n  \n  setRoomArr( [...publicRooms.map((_name)=>{\n          return {\n             name: _name,\n             roomType:\"public\",\n             currCnt: 1,\n             enterButton:<Link to={`/workspace/${workspace}/channel/Chat/${_name}`}><button>입장</button></Link>\n         }})\n      ])\n      console.log(\"roomArr\", roomArr);\n}, [roomArr]);\n\nuseEffect(()=>{\nsocket?.emit(\"getChatRoomInfo\", {}, getRooms);\nconsole.log(\"room arr:\", roomArr);\n}, [socket,newRoomFlag]);\n\nuseEffect(()=>{\n  socket?.on(\"new-room-created\", ()=>{\n    setNewRoomFlag(!newRoomFlag);\n  });\n},[roomArr]);\n\nconst columns = useMemo(\n  () => [\n    {\n      accessor: \"name\",\n      Header: \"Name\",\n    },\n    {\n      accessor: \"roomType\",\n      Header: \"RoomType\",\n    },\n    {\n      accessor: \"currCnt\",\n      Header: \"CurrCnt\",\n    },\n    {\n      accessor: \"enterButton\",\n      Header: <button onClick={onClickAddRoom}>생성 버튼</button>,\n    }\n    ,],\n  []\n);\n\n  return (\n    <div>\n      <Table columns={columns} data={roomArr} />\n      <CreateChannelModal\n        show={showCreateChannelModal}\n        onCloseModal={onCloseModal}\n        setShowCreateRoomModal={setShowCreateRoomModal}\n      />\n    </div>\n  );\n};\n\nexport default ChatChannel;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n"],"names":["Thead","styled","Tbody","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","CreateModal","CloseModalButton","show","children","onCloseModal","stopPropagation","useCallback","e","onClick","setShowCreateRoomModal","useSWR","fetcher","mutate","error","useInput","newRoom","onChangeNewRoom","setNewRoom","useParams","workspace","channel","useSocket","socket","clearModal","onCreateRoom","preventDefault","trim","console","log","emit","on","str","onSubmit","id","value","onChange","type","loadable","useState","showCreateChannelModal","newRoomFlag","setNewRoomFlag","test","setTest","useEffect","onClickAddRoom","roomArr","setRoomArr","getRooms","publicRooms","_name","name","roomType","currCnt","enterButton","to","useMemo","accessor","Header","Form","Label","Input","Button","Error","Success","LinkContainer"],"sourceRoot":""}