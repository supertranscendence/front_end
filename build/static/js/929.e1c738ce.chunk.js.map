{"version":3,"file":"static/js/929.e1c738ce.chunk.js","mappings":"kJAWA,IAPiB,SAAUA,GAC1B,OAA0BC,EAAAA,EAAAA,UAASD,GAAS,eAArCE,EAAK,KAAEC,EAAQ,KAItB,MAAO,CAACD,GAHQE,EAAAA,EAAAA,cAAY,SAACC,GAC5BF,EAASE,EAAEC,OAAOJ,MACnB,GAAG,IACqBC,EACzB,C,yJCsEA,UAxEc,WAEb,OAA+BI,EAAAA,EAAAA,IAAO,kCAAkCC,EAAAA,EAAQ,CAC/EC,iBAAiB,MADXC,EAAI,EAAJA,KAAaC,GAAF,EAALC,MAAa,EAAND,QAGnB,GAAoCV,EAAAA,EAAAA,WAAS,GAAM,eAA5CY,EAAU,KAAEC,EAAa,KAChC,GAA+BC,EAAAA,EAAAA,GAAS,IAAG,eAApCC,EAAK,KAAEC,EAAa,KAC3B,GAAqCF,EAAAA,EAAAA,GAAS,IAAG,eAA1CG,EAAQ,KAAEC,EAAgB,KAC3BC,GAAWhB,EAAAA,EAAAA,cACf,SAACC,GACCA,EAAEgB,iBACFP,GAAc,GACdQ,IAAAA,KAEI,wCACA,CAAEN,MAAAA,EAAOE,SAAAA,GACT,CACEK,iBAAiB,IAGpBC,MAAK,SAACC,GACHd,EAAOc,EAASf,MAAM,EAC1B,IACCgB,OAAM,SAACd,GAAW,IAAD,IAChBE,EAA6C,OAAjB,QAAd,EAAAF,EAAMa,gBAAQ,OAAM,QAAN,EAAd,EAAgBf,YAAI,WAAN,EAAd,EAAsBiB,MACtC,GACJ,GACA,CAACX,EAAOE,EAAUP,IAEpB,OAAID,GACFkB,QAAQC,IAAI,WAAWnB,GACvBoB,aAAaC,QAAQ,SAAUrB,EAAKM,QAC7B,SAAC,KAAQ,CAACgB,GAAG,8BASpB,iBAAKC,GAAG,YAAW,WACjB,SAAC,KAAM,+BACP,UAAC,KAAI,CAACb,SAAUA,EAAS,WACvB,UAAC,KAAK,CAACa,GAAG,cAAa,WACrB,+DACA,0BACE,SAAC,KAAK,CAACC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQjC,MAAOc,EAAOoB,SAAUnB,UAGxE,UAAC,KAAK,CAACgB,GAAG,iBAAgB,WACxB,wDACA,0BACE,SAAC,KAAK,CAACC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWjC,MAAOgB,EAAUkB,SAAUjB,MAEjFN,IAAc,SAAC,KAAK,0IAEvB,SAAC,KAAM,CAACqB,KAAK,SAAQ,oCAErB,mBAAQG,QAAS,WACbC,OAAOC,SAASC,KAAO,4CAC3B,EAAE,oDACF,mBAAQH,QAAS,WACbC,OAAOC,SAASC,KAAO,iDAC3B,EAAE,0DAAkB,UAAC,KAAa,kFAElC,SAAC,KAAI,CAACR,GAAG,UAAS,oEAI1B,C,0QC5EaS,EAASC,EAAAA,EAAAA,OAAa,uRAWtBC,EAAOD,EAAAA,EAAAA,KAAW,iFAMlBE,EAAQF,EAAAA,EAAAA,MAAY,4OAcpBG,EAAQH,EAAAA,EAAAA,MAAY,0rBAuBpBI,EAASJ,EAAAA,EAAAA,OAAa,soBA6BtBK,EAAQL,EAAAA,EAAAA,IAAU,wFAMlBM,EAAUN,EAAAA,EAAAA,IAAU,iEAKpBO,EAAgBP,EAAAA,EAAAA,EAAQ,8Q,gDCzFrC,IAJgB,SAACQ,GAAU,OAAK5B,IAAAA,IAAU4B,EAAI,CAC7C3B,iBAAgB,IACdC,MAAK,SAACC,GAAQ,OAAKA,EAASf,IAAI,GAAE,C","sources":["hooks/useInput.ts","pages/Login/index.tsx","pages/SignUp/styles.tsx","utils/fetcher.ts"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState } from \"react\"\n\ntype ReturnType<T =any>  = [T, (e: any) =>void, Dispatch<SetStateAction<T>>];\n// const useInput = (initData : any) =>{\nconst useInput = <T = any>(initData : T) : ReturnType<T> =>{\n\tconst [value, setValue] = useState(initData);\n\tconst handler = useCallback((e:any) =>{\n\t\tsetValue(e.target.value);\n\t}, []);\n\treturn [value, handler, setValue]\n}\nexport default useInput;","import useInput from '../../hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer } from '../SignUp/styles';\nimport fetcher from '../../utils/fetcher';\nimport axios from 'axios';\nimport { Link, Redirect } from 'react-router-dom';\nimport useSWR from 'swr';\nimport React, { useCallback, useState } from 'react';\n\nconst LogIn = () => {\n//   const { data: userData, error, mutate } = useSWR('/api/users', fetcher);\n\tconst {data, error, mutate}  = useSWR('http://localhost:3095/api/users',fetcher,{\n\t\tdedupingInterval:100000\n\t\t});\n  const [logInError, setLogInError] = useState(false);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmit = useCallback(\n    (e:any) => {\n      e.preventDefault();\n      setLogInError(false);\n      axios\n        .post(\n          'http://localhost:3095/api/users/login',\n          { email, password },\n          {\n            withCredentials: true,\n          },\n        )\n        .then((response) => {\n            mutate(response.data, false);\n        })\n        .catch((error) => {\n          setLogInError(error.response?.data?.code === 401);\n        });\n    },\n    [email, password, mutate],\n  );\n  if (data){\n    console.log(\"dataaaaa\",data);\n    localStorage.setItem(\"access\", data.email);\n    return <Redirect to=\"/workspace/sleact/intro\"/>\n  }\n  //   console.log(error, userData);\n  //   if (!error && userData) {\n    //     console.log('로그인됨', userData);\n    //     return <Redirect to=\"/workspace/sleact/channel/일반\" />;\n    //   }\n    \n  return (\n    <div id=\"container\">\n      <Header>Jiiranscendence</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n          {logInError && <Error>이메일과 비밀번호 조합이 일치하지 않습니다.</Error>}\n        </Label>\n        <Button type=\"submit\">로그인</Button>\n      </Form>\n        <button onClick={()=>{\n            window.location.href = \"http://127.0.0.1:3000/api/auth/ft/redirect\";\n        }}>로컬로 가보자</button>\n        <button onClick={()=>{\n            window.location.href = \"https://server.gilee.click/api/auth/ft/redirect\";\n        }}>기리네로 가보자</button><LinkContainer>\n        아직 회원이 아니신가요?&nbsp;\n        <Link to=\"/signup\">회원가입 하러가기</Link>\n      </LinkContainer>\n    </div>\n  );\n};\n\nexport default LogIn;\n//밥먹고올테니까 다 해 \"줘\"","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #4a154b;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(74, 21, 75, 0.9);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import axios from 'axios'\nimport { report } from 'process';\n\nconst fetcher = (url:string) => axios.get(url,{\n\twithCredentials:true,\n}).then((response) => response.data);\n\nexport default fetcher;"],"names":["initData","useState","value","setValue","useCallback","e","target","useSWR","fetcher","dedupingInterval","data","mutate","error","logInError","setLogInError","useInput","email","onChangeEmail","password","onChangePassword","onSubmit","preventDefault","axios","withCredentials","then","response","catch","code","console","log","localStorage","setItem","to","id","type","name","onChange","onClick","window","location","href","Header","styled","Form","Label","Input","Button","Error","Success","LinkContainer","url"],"sourceRoot":""}