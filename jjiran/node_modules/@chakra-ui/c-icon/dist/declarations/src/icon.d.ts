import { PropType, SVGAttributes } from "vue";
import { ChakraProps } from "@chakra-ui/vue-system";
export interface IconProps extends Omit<SVGAttributes, keyof ChakraProps>, ChakraProps {
    /**
     * Icon Size
     */
    size?: string;
}
export declare const iconProps: {
    as: {
        type: PropType<"small" | "sub" | "sup" | "p" | "label" | "a" | "b" | "article" | "aside" | "blockquote" | "button" | "caption" | "cite" | "circle" | "code" | "dd" | "div" | "dl" | "dt" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "header" | "hr" | "iframe" | "img" | "input" | "kbd" | "li" | "mark" | "main" | "nav" | "ol" | "path" | "pre" | "q" | "rect" | "s" | "svg" | "section" | "select" | "strong" | "span" | "table" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "tr" | "ul">;
        default: string;
    };
    name: {
        type: PropType<string | undefined>;
    };
    size: {
        type: PropType<string | undefined>;
        default: string;
    };
};
export declare const CIcon: import("vue").DefineComponent<{
    as: {
        type: PropType<"small" | "sub" | "sup" | "p" | "label" | "a" | "b" | "article" | "aside" | "blockquote" | "button" | "caption" | "cite" | "circle" | "code" | "dd" | "div" | "dl" | "dt" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "header" | "hr" | "iframe" | "img" | "input" | "kbd" | "li" | "mark" | "main" | "nav" | "ol" | "path" | "pre" | "q" | "rect" | "s" | "svg" | "section" | "select" | "strong" | "span" | "table" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "tr" | "ul">;
        default: string;
    };
    name: {
        type: PropType<string | undefined>;
    };
    size: {
        type: PropType<string | undefined>;
        default: string;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    as: {
        type: PropType<"small" | "sub" | "sup" | "p" | "label" | "a" | "b" | "article" | "aside" | "blockquote" | "button" | "caption" | "cite" | "circle" | "code" | "dd" | "div" | "dl" | "dt" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "header" | "hr" | "iframe" | "img" | "input" | "kbd" | "li" | "mark" | "main" | "nav" | "ol" | "path" | "pre" | "q" | "rect" | "s" | "svg" | "section" | "select" | "strong" | "span" | "table" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "tr" | "ul">;
        default: string;
    };
    name: {
        type: PropType<string | undefined>;
    };
    size: {
        type: PropType<string | undefined>;
        default: string;
    };
}>>, {
    as: "small" | "sub" | "sup" | "p" | "label" | "a" | "b" | "article" | "aside" | "blockquote" | "button" | "caption" | "cite" | "circle" | "code" | "dd" | "div" | "dl" | "dt" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "header" | "hr" | "iframe" | "img" | "input" | "kbd" | "li" | "mark" | "main" | "nav" | "ol" | "path" | "pre" | "q" | "rect" | "s" | "svg" | "section" | "select" | "strong" | "span" | "table" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "tr" | "ul";
    size: string | undefined;
}>;
//# sourceMappingURL=icon.d.ts.map